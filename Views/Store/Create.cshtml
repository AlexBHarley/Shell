@model Shell.ViewModels.Product.CreateProductViewModel


<body>
    <form action="" method="post" enctype="multipart/form-data">
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Product</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Files)
                <input type="file" name="Files" multiple id="upload" onchange="showImages()"/>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    </form>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    function showImages() {
        var imageArray = [];
        var inp = document.getElementById("upload");

        for (var i = 0; i < inp.files.length; i++) {

            imageArray.push( {Name : inp.files.item(i).name} );
            
            console.log(inp.files.item(i).name);
            //alert(inp.files.item(i).name);
        }

        
        var data = JSON.stringify({'data': imageArray});
        console.log(data);
        var things = [
            { id: 1, color: 'yellow' },
            { id: 2, color: 'blue' }
        ];

        things = JSON.stringify({ 'things': things });
        console.log(things);
        $.ajax({
            contentType: 'application/json; charset=utf-8',
            type: "POST",
            url: "/Store/GetImageResult",
            data: data,
            
            success: function(response) {
                alert(response);
            },
            failure: function(response) {
                alert("Soemthing went wrong");
            }
        });
    }
</script>
</body>
