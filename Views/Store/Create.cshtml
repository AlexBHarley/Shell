@model Shell.ViewModels.Product.CreateProductViewModel


<body>
    <form action="" method="post" enctype="multipart/form-data">
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Product</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Files)
                <input type="file" name="Files" multiple id="upload" onchange="showFiles(this)"/>
            </div>

            <div id="list">
                <ul>
                    
                </ul>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    </form>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    
    function createImageWithName(e, fullName) {
        var div = document.createElement("div");
        var image = document.createElement("img");
        image.src = e.target.result;
        var name = document.createElement("p");
        name.innerHTML = fullName;
        div.appendChild(image);
        div.appendChild(name);
        return div;
    }
    
    function showFiles(input) {
        var list = document.getElementById("list");
        $(input.files).each(function() {
            var reader = new FileReader();
            var name = this.name;
            console.log(name);
            reader.readAsDataURL(this);
            reader.onload = function (e) {
                var imageWithName = createImageWithName(e, name);
                
                list.appendChild(imageWithName);
            }
        });
    }

</script>
</body>
