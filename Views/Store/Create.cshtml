@model Shell.ViewModels.Product.CreateProductViewModel

<div class="create">
    <h4>Product</h4>
    <div class="col-md-6">
        <form action="" method="post" enctype="multipart/form-data" name="create_form">
            
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                <div class="form-group">
                    <div class="control-label col-md-2">
                        Title
                    </div>
                    <div class="col-md-10">
                        <input type="text" name="product_title"/>
                    </div>
                </div>

                <div class="form-group">
                    <div class="control-label col-md-2">
                        Description
                    </div>
                    <div class="col-md-10">
                        <textarea type="text" name="product_desc" rows="5"></textarea>
                    </div>
                </div>

               

                <div class="form-group">
                    <div class="control-label col-md-2">
                        Price
                    </div>
                    <div class="col-md-10">
                        <input type="number" name="product_price" min="0" required="required"/>
                    </div>
                </div>
                <div class="form-group">
                    <div class="control-label col-md-2">
                        Category
                    </div>
                    <div class="col-md-10">
                        <input type="text" name="product_cat" required="required" />
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        @Html.LabelFor(model => model.Files)
                        <input type="file" name="files" multiple id="upload" onchange="preview(this)"/>
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button onclick="submitCreateForm()">Create</button>
                        
                    </div>
                </div>
            </div>
        </form>
    </div>

    <div class="col-md-6">
        <div class="height" id="listing_images">
            <div class="scrollable-container">
                <div class="scrollable-content" id="img-list">

                </div>
            </div>
        </div>
    </div>
</div>



<script>
    window.preview = function (input) {
        if (input.files && input.files[0]) {

            var imgs = document.getElementById("img-list");
            while (imgs.firstChild) {
                imgs.removeChild(imgs.firstChild);
            }
            
            $(input.files).each(function () {
                document.getElementById("listing_images").style.display = 'block';
                var reader = new FileReader();
                reader.readAsDataURL(this);
                reader.onload = function (e) {
                    var item = createRadioImage(e);
                    $("#img-list").append(item);
                }
            });
        }
    }

    function submitCreateForm() {

        var product = new Object();
        product.Title = form.elements["product_title"].value;
        product.Description = form.elements["product_desc"].value;
        product.Price = form.elements["product_price"].value;
        product.Category = form.elements["product_cat"].value;

        if (!validateRadio()) {
            alert("Error");
        }

        product.Files = form.elements["files"].value;
        product.DisplayPic = validateRadio();
        console.log(product.DisplayPic);
        console.log(JSON.stringify(product));

        @*$.ajax({
            url: '@Url.Action("Create", "Store")',
            type: 'POST',
            dataType: 'json',
            data: JSON.stringify(product),
            contentType: "application/json; charset=utf-8"
        });*@
    }

    function validateRadio() {
        
        var imgList = document.getElementById("img-list").childNodes;

        for (var i = 0; i < imgList.length; i++) {
            //console.log(imgList[i].childNodes[1].src);
            if (imgList[i].childNodes[0].checked) {
                console.log(imgList[i].childNodes[1].src);
                return imgList[i].childNodes[1].src;
            }
        }
        return false;
    }

    function check(parentNode) {
        validateRadio();
    }

    function createRadioImage(e) {
        var label = document.createElement("label");
        label.setAttribute("onclick", "check(this)");

        var input = document.createElement("input");
        input.setAttribute("type", "radio");
        input.setAttribute("name", "img_radio");

        var img = document.createElement("img");
        img.src = e.target.result;

        label.appendChild(input);
        label.appendChild(img);
        return label;
    }


</script>